load("@rules_python//python:defs.bzl", "py_binary", "py_library", "py_test")
load("@rules_python//experimental/python:wheel.bzl", "py_package", "py_wheel")
load("//py:defs.bzl", "py_test_suite", "pytest_test")
load("//:copy_file.bzl", "copy_file")

copy_file(
    name = "get-attribute",
    src = "//javascript/webdriver/atoms:get-attribute.js",
    out = "automationAgent/webdriver/remote/getAttribute.js",
)

copy_file(
    name = "is-displayed",
    src = "//javascript/atoms/fragments:is-displayed.js",
    out = "automationAgent/webdriver/remote/isDisplayed.js",
)

copy_file(
    name = "find-elements",
    src = "//javascript/atoms/fragments:find-elements.js",
    out = "automationAgent/webdriver/remote/findElements.js",
)

copy_file(
    name = "firefox-driver-prefs",
    src = "//third_party/js/automationAgent:webdriver_json",
    out = "automationAgent/webdriver/firefox/webdriver_prefs.json",
)

py_library(
    name = "automationAgent",
    srcs = glob(
        ["automationAgent/**/*.py"],
        exclude = ["generate.py"],
    ),
    data = [
        ":create-cdp-srcs",
        ":find-elements",
        ":firefox-driver-prefs",
        ":get-attribute",
        ":is-displayed",
    ],
    imports = ["."],
    visibility = ["//visibility:public"],
    deps = [
        "//third_party/py:certifi",
        "//third_party/py:urllib3",
    ],
)

py_package(
    name = "automationAgent-pkg",
    packages = [
        "py.automationAgent",
        "py.automationAgent.common",
        "py.automationAgent.webdriver",
        "py.automationAgent.webdriver.chrome",
        "py.automationAgent.webdriver.chromium",
        "py.automationAgent.webdriver.common",
        "py.automationAgent.webdriver.common.devtools",
        "py.automationAgent.webdriver.edge",
        "py.automationAgent.webdriver.firefox",
        "py.automationAgent.webdriver.remote",
        "py.automationAgent.webdriver.safari",
    ],
    deps = [":automationAgent"],
)

py_wheel(
    name = "automationAgent-wheel",
    distribution = "automationAgent",
    python_tag = [
        "py2",
        "py3",
    ],
    requires = [
        "urllib3[secure]",
    ],
    strip_path_prefixes = [
        "py",
    ],
    version = "4.0.0.a6",
    visibility = ["//visibility:public"],
    deps = [
        ":automationAgent-pkg",
    ],
)

py_library(
    name = "init-tree",
    testonly = True,
    srcs = [
        "conftest.py",
        "test/__init__.py",
        "test/automationagent/__init__.py",
        "test/automationagent/webdriver/__init__.py",
        "test/automationagent/webdriver/chrome/__init__.py",
        "test/automationagent/webdriver/common/__init__.py",
        "test/automationagent/webdriver/common/conftest.py",
        "test/automationagent/webdriver/common/network.py",
        "test/automationagent/webdriver/common/webserver.py",
        "test/automationagent/webdriver/firefox/__init__.py",
        "test/automationagent/webdriver/firefox/conftest.py",
        "test/automationagent/webdriver/marionette/__init__.py",
        "test/automationagent/webdriver/marionette/conftest.py",
        "test/automationagent/webdriver/safari/conftest.py",
        "test/automationagent/webdriver/support/__init__.py",
        "test/automationagent/webdriver/support/conftest.py",
    ],
    data = [
        "setup.cfg",
    ],
    imports = ["."],
    deps = [
        ":webserver",
    ],
)

genrule(
    name = "create-cdp-srcs",
    srcs = [
        "generate.py",
        ":browser_protocol",
        ":js_protocol",
    ],
    outs = ["automationAgent/webdriver/common/devtools"],
    cmd = "python3 $(location generate.py) $(location :browser_protocol) $(location :js_protocol) $@",
    tools = [
    ],
)

copy_file(
    name = "browser_protocol",
    src = "//common/devtools:browser_protocol.json",
    out = "browser_protocol.json",
)

copy_file(
    name = "js_protocol",
    src = "//common/devtools:js_protocol.json",
    out = "js_protocol.json",
)

py_test_suite(
    name = "unit",
    size = "small",
    srcs = glob([
        "test/unit/**/*.py",
    ]),
    args = [
        "-n=auto",
        "--instafail",
    ],
    deps = [
        ":init-tree",
        ":automationAgent",
        "//third_party/py:pytest",
    ],
)

py_library(
    name = "webserver",
    testonly = True,
    srcs = [
        "test/automationagent/webdriver/common/network.py",
        "test/automationagent/webdriver/common/webserver.py",
    ],
    data = [
        "//common/src/web",
    ],
    deps = [],
)

py_test_suite(
    name = "test-chrome",
    size = "large",
    srcs = glob([
        "test/automationagent/webdriver/chrome/**/*.py",
        "test/automationagent/webdriver/common/**/*.py",
        "test/automationagent/webdriver/support/**/*.py",
    ]),
    args = [
        "--instafail",
        "--driver=Chrome",
    ],
    tags = [
        "no-sandbox",
    ],
    deps = [
        ":init-tree",
        ":automationAgent",
        ":webserver",
        "//third_party/py:pytest",
    ],
)

py_test_suite(
    name = "test-edge",
    size = "large",
    srcs = glob([
        "test/automationagent/webdriver/edge/**/*.py",
        "test/automationagent/webdriver/common/**/*.py",
        "test/automationagent/webdriver/support/**/*.py",
    ]),
    args = [
        "--instafail",
        "--driver=Edge",
    ],
    tags = [
        "no-sandbox",
    ],
    deps = [
        ":init-tree",
        ":automationAgent",
        ":webserver",
        "//third_party/py:pytest",
    ],
)

py_test_suite(
    name = "test-edge-chromium",
    size = "large",
    srcs = glob([
        "test/automationagent/webdriver/edge/**/*.py",
        "test/automationagent/webdriver/common/**/*.py",
        "test/automationagent/webdriver/support/**/*.py",
    ]),
    args = [
        "--instafail",
        "--driver=ChromiumEdge",
    ],
    tags = [
        "no-sandbox",
    ],
    deps = [
        ":init-tree",
        ":automationAgent",
        ":webserver",
        "//third_party/py:pytest",
    ],
)

py_test_suite(
    name = "test-firefox",
    size = "large",
    srcs = glob([
        "test/automationagent/webdriver/common/**/*.py",
        "test/automationagent/webdriver/marionette/**/*.py",
        "test/automationagent/webdriver/support/**/*.py",
    ]),
    args = [
        "--instafail",
        "--driver=Firefox",
    ],
    tags = [
        "no-sandbox",
    ],
    deps = [
        ":init-tree",
        ":automationAgent",
        ":webserver",
        "//third_party/py:pytest",
    ],
)

py_test_suite(
    name = "test-remote",
    size = "large",
    srcs = glob([
        "test/automationagent/webdriver/common/**/*.py",
        "test/automationagent/webdriver/support/**/*.py",
    ]),
    args = [
        "--instafail",
        "--driver=Remote",
    ],
    data = [
        "//java/server/src/org/smartqa/automationagent/grid:selenium_server_deploy.jar",
    ],
    tags = [
        "no-sandbox",
    ],
    deps = [
        ":init-tree",
        ":automationAgent",
        ":webserver",
        "//third_party/py:pytest",
    ],
)

py_test_suite(
    name = "test-ie",
    size = "large",
    srcs = glob([
        "test/automationagent/webdriver/common/**/*.py",
        "test/automationagent/webdriver/ie/**/*.py",
        "test/automationagent/webdriver/support/**/*.py",
    ]),
    args = [
        "--instafail",
        "--driver=Ie",
    ],
    tags = [
        "no-sandbox",
    ],
    deps = [
        ":init-tree",
        ":automationAgent",
        ":webserver",
        "//third_party/py:pytest",
    ],
)

py_test_suite(
    name = "test-safari",
    size = "large",
    srcs = glob([
        "test/automationagent/webdriver/common/**/*.py",
        "test/automationagent/webdriver/safari/**/*.py",
        "test/automationagent/webdriver/support/**/*.py",
    ]),
    args = [
        "--instafail",
        "--driver=Safari",
    ],
    tags = [
        "exclusive",
        "no-sandbox",
    ],
    deps = [
        ":init-tree",
        ":automationAgent",
        ":webserver",
        "//third_party/py:pytest",
    ],
)

py_test_suite(
    name = "test-webkitgtk",
    size = "large",
    srcs = glob([
        "test/automationagent/webdriver/common/**/*.py",
        "test/automationagent/webdriver/support/**/*.py",
    ]),
    args = [
        "--instafail",
        "--driver=WebKitGTK",
        "--browser-binary=MiniBrowser",
        "--browser-args=--automation",
    ],
    tags = [
        "exclusive",
        "no-sandbox",
    ],
    deps = [
        ":init-tree",
        ":automationAgent",
        ":webserver",
        "//third_party/py:pytest",
    ],
)

py_test_suite(
    name = "test-wpewebkit",
    size = "large",
    srcs = glob([
        "test/automationagent/webdriver/common/**/*.py",
        "test/automationagent/webdriver/support/**/*.py",
    ]),
    args = [
        "--instafail",
        "--driver=WPEWebKit",
        "--browser-binary=MiniBrowser",
        "--browser-args=--automation --headless",
    ],
    tags = [
        "exclusive",
        "no-sandbox",
    ],
    deps = [
        ":init-tree",
        ":automationAgent",
        ":webserver",
        "//third_party/py:pytest",
    ],
)
